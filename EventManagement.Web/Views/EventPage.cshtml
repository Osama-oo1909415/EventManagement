@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<EventPage>
@{
    Layout = "_Layout.cshtml";
}

<div class="container py-5">
    <h1>@Model.EventTitle</h1>
    <p class="lead"><strong>Date:</strong> @Model.EventDate.ToString("dddd, dd MMMM<x_bin_615>")</p>
    <hr/>
    <div class="row g-5">
        <div class="col-md-8">
            @if (Model.FeaturedImage != null)
            {
                <img src="@Model.FeaturedImage.Url()" alt="@Model.EventTitle" class="img-fluid rounded mb-4" />
            }
            <div class="p-4 bg-white rounded shadow-sm mb-5">
                <h2>About this Event</h2>
                @Html.Raw(Model.Description)
            </div>

            <!-- REGISTRATION FORM -->
            <div class="p-4 bg-white rounded shadow-sm">
                <h2>Register for this Event</h2>
                <form id="registrationForm">
                    <input type="hidden" id="eventId" value="@Model.Id" />

                    <div class="mb-3">
                        <label for="name" class="form-label">Your Name</label>
                        <input type="text" class="form-control" id="name" required>
                    </div>

                    <div class="mb-3">
                        <label for="email" class="form-label">Your Email</label>
                        <input type="email" class="form-control" id="email" required>
                    </div>

                    <button type="submit" class="btn btn-primary">Register Now</button>
                </form>

                <div id="formStatus" class="mt-3"></div>
            </div>

            @{
                var speakers = Model.EventSpeakers;
                if (speakers != null && speakers.Any())
                {
                    <div class="mt-5 p-4 bg-white rounded shadow-sm">
                        <h2>Speakers</h2>
                        <div class="row">
                            @foreach (var speaker in speakers.OfType<Speaker>())
                            {
                                <div class="col-md-6 mb-3">
                                    <div class="d-flex align-items-center">
                                        @{
                                            var photo = speaker.Photo;
                                            if (photo != null)
                                            {
                                                <img src="@photo.Url()" class="rounded-circle me-3" style="width:60px; height:60px; object-fit: cover;" />
                                            }
                                        }
                                        <div>
                                            <h5 class="mb-0">@speaker.SpeakerName</h5>
                                            <p class="mb-0 text-muted">@speaker.Bio</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        </div>
        <div class="col-md-4">
            <div class="p-4 bg-white rounded shadow-sm">
                <h2>Location</h2>
                <div id="map" class="map mt-3"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        const coordsString = "@Model.Coordinates";
        if (coordsString) {
            const parts = coordsString.split(',');
            const lat = parseFloat(parts[0].trim());
            const lon = parseFloat(parts[1].trim());
            const map = new ol.Map({
                target: 'map',
                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],
                view: new ol.View({ center: ol.proj.fromLonLat([lon, lat]), zoom: 15 })
            });
            const marker = new ol.layer.Vector({
                source: new ol.source.Vector({ features: [ new ol.Feature({ geometry: new ol.geom.Point(ol.proj.fromLonLat([lon, lat])) }) ] }),
                style: new ol.style.Style({ image: new ol.style.Icon({ anchor: [0.5, 46], anchorXUnits: 'fraction', anchorYUnits: 'pixels', src: 'https://openlayers.org/en/latest/examples/data/icon.png' }) })
            });
            map.addLayer(marker);
        }

        // Wait for the document to be fully loaded
        document.addEventListener('DOMContentLoaded', function () {

            // Get the form element from the page
            const form = document.getElementById('registrationForm');

            // Add an event listener for when the form is submitted
            form.addEventListener('submit', function (event) {

                // Prevent the form from doing a normal page refresh
                event.preventDefault();

                // Get the values from the form fields
                const name = document.getElementById('name').value;
                const email = document.getElementById('email').value;
                const eventId = document.getElementById('eventId').value;

                // The URL for our API controller
                const apiUrl = '/umbraco/api/registration/submit';

                // Send the data to the API using the fetch method
                fetch(apiUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        Name: name,
                        Email: email,
                        EventId: parseInt(eventId)
                    })
                })
                .then(response => response.json())
                .then(data => {
                    // Show the success or error message from the controller
                    const formStatus = document.getElementById('formStatus');
                    formStatus.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
                    form.reset(); // Clear the form
                })
                .catch(error => {
                    // Show an error message if something goes wrong
                    console.error('Error:', error);
                    const formStatus = document.getElementById('formStatus');
                    formStatus.innerHTML = `<div class="alert alert-danger">An error occurred. Please try again.</div>`;
                });
            });
        });
    </script>
}
